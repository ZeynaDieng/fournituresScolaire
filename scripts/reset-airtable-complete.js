// scripts/reset-airtable-complete.js
import Airtable from "airtable";
import { config } from "dotenv";

config();

const base = new Airtable({ apiKey: process.env.AIRTABLE_API_KEY }).base(
  process.env.AIRTABLE_BASE_ID
);

// Donn√©es exactes du store local
const PACKS_DATA = [
  {
    id: "pack-cp",
    name: "Pack Essentiel CP",
    level: "CP",
    price: 16500,
    originalPrice: 19000,
    image:
      "https://i.pinimg.com/736x/06/af/19/06af192e5165b1694ed1d901ccbe991e.jpg",
    description:
      "Le n√©cessaire pour bien d√©marrer le Cours Pr√©paratoire (CI/CP).",
    contents: [
      "5 Cahiers 96 pages (17x22cm)",
      "2 Cahiers de dessin 48 pages",
      "1 Ardoise Velleda + 2 feutres + 1 chiffon",
      "1 Trousse garnie (2 stylos bleus, 1 stylo vert, 1 crayon noir, 1 gomme, 1 taille-crayon)",
      "1 Bo√Æte de 12 crayons de couleur",
      "1 R√®gle plate 20cm",
      "5 Prot√®ge-cahiers (couleurs assorties)",
      "1 Paquet de 100 √©tiquettes",
    ],
    isPopular: true,
    inStock: true,
    isPromotion: true,
    promotionEndDate: "2024-12-31",
  },
  {
    id: "pack-ce",
    name: "Pack Avanc√© CE1-CE2",
    level: "CE1-CE2",
    price: 21000,
    originalPrice: 25000,
    image:
      "https://i.pinimg.com/736x/4c/27/58/4c275881308b4ae3956c80856018a375.jpg",
    description: "Un pack complet pour les √©l√®ves du Cours √âl√©mentaire.",
    contents: [
      "8 Cahiers 96 pages (17x22cm)",
      "4 Cahiers 192 pages (21x29.7cm)",
      "1 Cahier de po√©sie/chant",
      "1 Trousse (2 stylos bleus, 1 vert, 1 rouge, 1 noir, 1 crayon, 1 gomme, 1 taille-crayon)",
      "1 Bo√Æte de 12 feutres de couleur",
      "1 Kit de tra√ßage (r√®gle 30cm, √©querre, rapporteur)",
      "1 Compas",
      "1 Agenda scolaire ou cahier de texte",
      "8 Prot√®ge-cahiers (formats assortis)",
    ],
    isPopular: true,
    inStock: true,
    isPromotion: false,
    promotionEndDate: null,
  },
  {
    id: "pack-college",
    name: "Pack Coll√®ge 6√®me-3√®me",
    level: "Coll√®ge",
    price: 28000,
    originalPrice: 33000,
    image:
      "https://i.pinimg.com/736x/10/54/a3/1054a36c0ce9460b0a1e2aafa65c9a20.jpg",
    description: "L'√©quipement id√©al pour r√©ussir ses ann√©es de coll√®ge.",
    contents: [
      "5 Cahiers 200 pages grand format (24x32cm)",
      "3 Classeurs A4 souples",
      "1 Paquet de 200 copies doubles A4",
      "1 Paquet de 100 copies simples A4",
      "1 Trousse compl√®te (stylos, surligneurs, correcteur)",
      "1 Calculatrice scientifique type coll√®ge",
      "1 Kit de g√©om√©trie complet et r√©sistant",
      "1 Agenda scolaire",
      "1 Trieur 8 compartiments",
    ],
    isPopular: true,
    inStock: true,
    isPromotion: true,
    promotionEndDate: "2024-12-15",
  },
  {
    id: "pack-lycee",
    name: "Pack Lyc√©e Seconde-Terminale",
    level: "Lyc√©e",
    price: 38500,
    originalPrice: 45000,
    image: "https://placehold.co/600x400/F4ECF7/17202A?text=Pack+Lycee",
    description:
      "Un pack robuste et complet pour affronter les d√©fis du lyc√©e.",
    contents: [
      "4 Classeurs A4 rigides grand format",
      "1 Paquet de 400 copies doubles A4 perfor√©es",
      "1 Paquet de 200 copies simples A4 perfor√©es",
      "1 Trieur 12 compartiments",
      "1 Lot de 4 surligneurs de couleurs diff√©rentes",
      "1 Calculatrice scientifique graphique (avec mode examen)",
      "1 Agenda grand format",
      "1 Ramette de papier 500 feuilles",
      "Stylos et porte-mine de qualit√© sup√©rieure",
    ],
    isPopular: false,
    inStock: true,
    isPromotion: false,
    promotionEndDate: null,
  },
];

const PRODUCTS_DATA = [
  // Cahiers
  {
    id: "cahier-32p",
    name: "Cahier 32 pages",
    price: 300,
    image:
      "https://i.pinimg.com/1200x/a9/ee/92/a9ee9212b025b90fd7d2a14529c7c6c5.jpg",
    originalPrice: 400,
    isPromotion: false,
    inStock: true,
    category: "Cahiers",
    description: "Petit cahier de 32 pages",
    images: [
      "https://i.pinimg.com/736x/13/0a/97/130a97c6155ea06d2080a9fd0f75e9d6.jpg",
      "https://i.pinimg.com/736x/c5/fd/a0/c5fda0023a4a3e7fa7c68c5c27c00182.jpg",
    ],
    features: [
      { label: "Pages", value: "32 pages" },
      { label: "Format", value: "A5" },
      { label: "Reliure", value: "Agraf√©e" },
      { label: "Couleur", value: "Blanc" },
    ],
    specs: [
      { label: "Poids", value: "100g" },
      { label: "Dimensions", value: "14.8 x 21 cm" },
      { label: "Mat√©riau", value: "Papier standard" },
      { label: "Couverture", value: "Souple" },
    ],
    reviews: [
      {
        id: 1,
        user: "Alice",
        rating: 4,
        comment: "Bonne qualit√©.",
        date: "1 ao√ªt 2025",
      },
    ],
    bulkOptions: [
      { quantity: 5, unitPrice: 280, discount: 5 },
      { quantity: 10, unitPrice: 270, discount: 10 },
    ],
  },
  {
    id: "cahier-48p",
    name: "Cahier 48 pages",
    price: 350,
    image:
      "https://i.pinimg.com/1200x/e1/8e/e6/e18ee65268ca73af5a35f4f2ade2c27d.jpg",
    originalPrice: null,
    isPromotion: false,
    inStock: true,
    category: "Cahiers",
    description: "Cahier de 48 pages, format standard",
    images: [
      "https://i.pinimg.com/1200x/e1/8e/e6/e18ee65268ca73af5a35f4f2ade2c27d.jpg",
      "https://i.pinimg.com/736x/6a/50/2d/6a502d7a2f0932ce229a52941eba7050.jpg",
    ],
    features: [
      { label: "Pages", value: "48 pages" },
      { label: "Format", value: "A5" },
      { label: "Reliure", value: "Agraf√©e" },
      { label: "Couleur", value: "Blanc" },
    ],
  },
  {
    id: "stylo-bille-bleu",
    name: "Stylo Bille Bleu",
    price: 100,
    image:
      "https://i.pinimg.com/736x/f3/c3/96/f3c396b6166cb46d61cafa6656cce35c.jpg",
    inStock: true,
    originalPrice: null,
    isPromotion: false,
    category: "Stylos",
    description: "Stylo bille encre bleue, pointe fine",
    images: [
      "https://i.pinimg.com/1200x/4c/7a/91/4c7a917a5e91cb46adf213cf3de30734.jpg",
      "https://i.pinimg.com/736x/bb/d8/a2/bbd8a25b8d8337928749a63520a30e7c.jpg",
    ],
    features: [
      { label: "Type", value: "Bille" },
      { label: "Couleur encre", value: "Bleu" },
      { label: "Pointe", value: "Fine" },
    ],
  },
  {
    id: "stylo-bille-noir",
    name: "Stylo Bille Noir",
    price: 100,
    image:
      "https://i.pinimg.com/1200x/4c/7a/91/4c7a917a5e91cb46adf213cf3de30734.jpg",
    originalPrice: null,
    isPromotion: false,
    inStock: true,
    category: "Stylos",
    description: "Stylo bille encre noire, pointe fine",
  },
  {
    id: "crayon-hb",
    name: "Crayon HB",
    price: 100,
    image:
      "https://i.pinimg.com/1200x/33/7e/3b/337e3b1b9a8b9e5b4a9e1a0b8c5a2a1d.jpg",
    originalPrice: null,
    isPromotion: false,
    inStock: true,
    category: "Crayons",
    description: "Crayon √† papier HB",
  },
  {
    id: "calculatrice-scientifique",
    name: "Calculatrice Scientifique",
    price: 12000,
    image:
      "https://i.pinimg.com/1200x/33/7e/3b/337e3b1b9a8b9e5b4a9e1a0b8c5a2a1d.jpg",
    originalPrice: null,
    isPromotion: false,
    inStock: true,
    category: "Calculatrices",
    description: "Calculatrice scientifique programmable",
  },
  {
    id: "sac-a-dos-enfant",
    name: "Sac √† dos enfant",
    price: 8000,
    image:
      "https://i.pinimg.com/1200x/66/9d/4d/669d4d4b8e8e5b5a5e5b5a5e5b5a5e5b.jpg",
    originalPrice: 10000,
    isPromotion: true,
    inStock: true,
    promotionEndDate: "2024-12-20",
    category: "Sacs",
    description: "Sac √† dos color√© et r√©sistant pour enfants",
  },
];

async function clearAllData() {
  console.log("üóëÔ∏è  Suppression compl√®te de toutes les donn√©es...");

  try {
    // Supprimer tous les packs existants
    const existingPacks = await base("Packs").select().all();
    if (existingPacks.length > 0) {
      console.log(
        `üì¶ Suppression de ${existingPacks.length} packs existants...`
      );
      const packIds = existingPacks.map((record) => record.id);
      for (let i = 0; i < packIds.length; i += 10) {
        const batch = packIds.slice(i, i + 10);
        await base("Packs").destroy(batch);
      }
      console.log("‚úÖ Packs supprim√©s");
    } else {
      console.log("‚ÑπÔ∏è  Aucun pack √† supprimer");
    }

    // Supprimer tous les produits existants
    try {
      const existingProducts = await base("Products").select().all();
      if (existingProducts.length > 0) {
        console.log(
          `üõçÔ∏è  Suppression de ${existingProducts.length} produits existants...`
        );
        const productIds = existingProducts.map((record) => record.id);
        for (let i = 0; i < productIds.length; i += 10) {
          const batch = productIds.slice(i, i + 10);
          await base("Products").destroy(batch);
        }
        console.log("‚úÖ Produits supprim√©s");
      } else {
        console.log("‚ÑπÔ∏è  Aucun produit √† supprimer");
      }
    } catch (error) {
      console.log("‚ÑπÔ∏è  Table Products n'existe pas encore");
    }
  } catch (error) {
    console.error("‚ùå Erreur lors de la suppression:", error);
    throw error;
  }
}

async function createPacksInAirtable() {
  console.log("üì¶ Cr√©ation des packs dans Airtable...");

  try {
    const packsToCreate = PACKS_DATA.map((pack) => ({
      fields: {
        // On utilise la structure actuelle d'Airtable
        Description: `${pack.description}. ${pack.name}`,
        Level: pack.level,
        Price: pack.price,
        "Original Price": pack.originalPrice || pack.price,
        Contents: pack.contents.join(", "),
        "Is Popular": pack.isPopular || false,
        "In Stock": pack.inStock,
        "Is Promotion": pack.isPromotion || false,
        "Promotion End Date": pack.promotionEndDate,
      },
    }));

    // Cr√©er par lots de 10 (limite Airtable)
    for (let i = 0; i < packsToCreate.length; i += 10) {
      const batch = packsToCreate.slice(i, i + 10);
      const created = await base("Packs").create(batch);
      console.log(
        `‚úÖ Lot ${Math.floor(i / 10) + 1}: ${created.length} packs cr√©√©s`
      );
    }

    console.log(`üéâ Total: ${PACKS_DATA.length} packs ajout√©s avec succ√®s !`);
  } catch (error) {
    console.error("‚ùå Erreur lors de la cr√©ation des packs:", error);
    throw error;
  }
}

async function createProductsInAirtable() {
  console.log("üõçÔ∏è  Cr√©ation des produits dans Airtable...");

  try {
    // Cr√©er une table Products si elle n'existe pas
    // On va utiliser la m√™me structure que les Packs pour commencer
    const productsToCreate = PRODUCTS_DATA.map((product) => ({
      fields: {
        Description: `${product.description}. ${product.name}`,
        Level: product.category, // On utilise Level pour la cat√©gorie
        Price: product.price,
        "Original Price": product.originalPrice || product.price,
        Contents: JSON.stringify({
          id: product.id,
          category: product.category,
          features: product.features || [],
          specs: product.specs || [],
          reviews: product.reviews || [],
          bulkOptions: product.bulkOptions || [],
          images: product.images || [product.image],
        }),
        "Is Popular": false, // Les produits ne sont pas "populaires" par d√©faut
        "In Stock": product.inStock,
        "Is Promotion": product.isPromotion || false,
        "Promotion End Date": product.promotionEndDate || null,
      },
    }));

    // Essayer d'abord avec la table Products
    try {
      for (let i = 0; i < productsToCreate.length; i += 10) {
        const batch = productsToCreate.slice(i, i + 10);
        const created = await base("Products").create(batch);
        console.log(
          `‚úÖ Lot ${Math.floor(i / 10) + 1}: ${created.length} produits cr√©√©s`
        );
      }
      console.log(
        `üéâ Total: ${PRODUCTS_DATA.length} produits ajout√©s √† la table Products !`
      );
    } catch (error) {
      if (error.message.includes("NOT_FOUND")) {
        console.log(
          "‚ö†Ô∏è  Table Products non trouv√©e, ajout dans la table Packs..."
        );

        // Fallback: ajouter √† la table Packs avec un marqueur
        const productsForPacks = productsToCreate.map((product) => ({
          fields: {
            ...product.fields,
            Description: `[PRODUIT] ${product.fields.Description}`,
          },
        }));

        for (let i = 0; i < productsForPacks.length; i += 10) {
          const batch = productsForPacks.slice(i, i + 10);
          const created = await base("Packs").create(batch);
          console.log(
            `‚úÖ Lot ${Math.floor(i / 10) + 1}: ${
              created.length
            } produits ajout√©s √† Packs`
          );
        }
        console.log(
          `üéâ Total: ${PRODUCTS_DATA.length} produits ajout√©s √† la table Packs !`
        );
      } else {
        throw error;
      }
    }
  } catch (error) {
    console.error("‚ùå Erreur lors de la cr√©ation des produits:", error);
    throw error;
  }
}

async function main() {
  console.log("üöÄ RESET COMPLET D'AIRTABLE - Transfert du store local");
  console.log("=".repeat(60));

  try {
    // 1. Vider compl√®tement la base
    await clearAllData();

    console.log("\n" + "‚è±Ô∏è  Pause de 2 secondes...".padEnd(60));
    await new Promise((resolve) => setTimeout(resolve, 2000));

    // 2. Recr√©er tous les packs
    await createPacksInAirtable();

    console.log("\n" + "‚è±Ô∏è  Pause de 2 secondes...".padEnd(60));
    await new Promise((resolve) => setTimeout(resolve, 2000));

    // 3. Recr√©er tous les produits
    await createProductsInAirtable();

    console.log("\n" + "=".repeat(60));
    console.log("üéâ SUCC√àS COMPLET !");
    console.log("üìä Donn√©es transf√©r√©es:");
    console.log(`   ‚Ä¢ ${PACKS_DATA.length} packs scolaires`);
    console.log(`   ‚Ä¢ ${PRODUCTS_DATA.length} produits individuels`);
    console.log("\nüí° Tu peux maintenant:");
    console.log("   1. Aller sur airtable.com");
    console.log("   2. Modifier directement les donn√©es");
    console.log("   3. Le site se mettra √† jour automatiquement !");
    console.log("\nüîó Lien Airtable: https://airtable.com/");
  } catch (error) {
    console.error("\n‚ùå ERREUR CRITIQUE:", error);
    process.exit(1);
  }
}

// Ex√©cuter le script
main();
