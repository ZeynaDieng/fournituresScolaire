#!/bin/bash

# üîç Script de V√©rification Post-Configuration Vercel
# Usage: ./verify-vercel-config.sh

BASE_URL="https://fournitures-scolaire.vercel.app"
TIMESTAMP=$(date +%s)

echo "üîç V√©rification de la Configuration Vercel"
echo "=========================================="
echo "Site: $BASE_URL"
echo "Timestamp: $TIMESTAMP"
echo ""

# Fonction pour afficher le statut
check_status() {
    if [ "$1" = "200" ]; then
        echo "‚úÖ OK"
    else
        echo "‚ùå Erreur (HTTP $1)"
    fi
}

# Test 1: V√©rification de l'accessibilit√©
echo "üì° 1. Test d'accessibilit√© du site..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL")
check_status "$response"

# Test 2: Test de la page de test PayTech
echo ""
echo "üß™ 2. Test de la page de test PayTech..."
response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/test-paytech")
check_status "$response"

# Test 3: Test minimal de l'API PayTech
echo ""
echo "üí≥ 3. Test minimal de l'API PayTech..."
init_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/paytech/initiate" \
  -H "Content-Type: application/json" \
  -d "{
    \"amount\": 1000,
    \"currency\": \"XOF\",
    \"ref_command\": \"verify-$TIMESTAMP\",
    \"customer\": {
      \"name\": \"Verification User\",
      \"email\": \"verify@example.com\",
      \"phone\": \"+221123456789\"
    },
    \"items\": [
      {
        \"name\": \"Verification Test\",
        \"quantity\": 1,
        \"unit_price\": 1000
      }
    ]
  }")

# Extraire le code de statut HTTP (derni√®res 3 caract√®res)
http_code="${init_response: -3}"
response_body="${init_response%???}"

echo "HTTP Status: $http_code"

if [ "$http_code" = "200" ]; then
    echo "‚úÖ API PayTech accessible"
    if echo "$response_body" | grep -q "token\|redirect_url"; then
        echo "‚úÖ R√©ponse PayTech valide"
        echo "üéØ Configuration Vercel correcte!"
    else
        echo "‚ö†Ô∏è  R√©ponse inattendue:"
        echo "$response_body" | head -n 5
    fi
else
    echo "‚ùå Erreur API PayTech"
    echo "üìÑ R√©ponse:"
    echo "$response_body" | head -n 10
fi

# Test 4: V√©rification des pages essentielles
echo ""
echo "üåê 4. V√©rification des pages essentielles..."
pages=("/checkout" "/payment/success" "/payment/cancel")
for page in "${pages[@]}"; do
    response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL$page")
    printf "   %-20s " "$page"
    check_status "$response"
done

echo ""
echo "=========================================="

if [ "$http_code" = "200" ] && echo "$response_body" | grep -q "token\|redirect_url"; then
    echo "üéâ Configuration Vercel : SUCC√àS"
    echo ""
    echo "‚úÖ Actions suivantes recommand√©es:"
    echo "   1. Tester le flux complet sur $BASE_URL/test-paytech"
    echo "   2. Configurer les URLs de webhook PayTech"
    echo "   3. Tester avec de vrais moyens de paiement"
    echo "   4. Configurer une base de donn√©es cloud"
else
    echo "‚ö†Ô∏è  Configuration Vercel : INCOMPL√àTE"
    echo ""
    echo "üîß Actions correctives:"
    echo "   1. V√©rifier les variables d'environnement sur Vercel"
    echo "   2. Red√©ployer l'application"
    echo "   3. V√©rifier les cl√©s PayTech"
    echo "   4. Consulter les logs Vercel Functions"
fi

echo ""
echo "üìö Documentation: docs/VERCEL_ENVIRONMENT_SETUP.md"
